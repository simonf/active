// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var SFLocals, listView;
    $('#logged-in-username').append(CookieChecker.getUserName());
    listView = new ListView();
    SFLocals = {
      actions: [],
      categories: [],
      matchedActionCategories: [],
      setDay: function(nd) {
        $('#when-in').val(nd.toString('dd-MMM'));
        return $('#upAt').val(nd.getTime());
      },
      popCategory: function() {
        var cat, _i, _len, _ref, _results;
        _ref = SFLocals.categories;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          cat = _ref[_i];
          _results.push($("#cat_list").append("<option>" + cat + "</option>"));
        }
        return _results;
      },
      popActivity: function() {
        var act, _i, _len, _ref, _results;
        _ref = SFLocals.actions;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          act = _ref[_i];
          _results.push($("#act_list").append("<option>" + act + "</option>"));
        }
        return _results;
      }
    };
    SimpleClient.fetchCategoriesAndActionsForUser(function(dat) {
      var row, _i, _len;
      for (_i = 0, _len = dat.length; _i < _len; _i++) {
        row = dat[_i];
        if (SFLocals.actions.indexOf(row.key[1]) === -1) {
          SFLocals.actions.push(row.key[1]);
        }
        if (SFLocals.categories.indexOf(row.key[2]) === -1) {
          SFLocals.categories.push(row.key[2]);
        }
        SFLocals.matchedActionCategories.push([row.key[1], row.key[2]]);
      }
      $('#action-in').inlineComplete({
        terms: SFLocals.actions
      });
      $('#category-in').inlineComplete({
        terms: SFLocals.categories
      });
      SFLocals.popCategory();
      SFLocals.popActivity();
      $('#action-in').blur(function() {
        var hit, poss, _j, _len1, _ref;
        _ref = SFLocals.matchedActionCategories;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          hit = _ref[_j];
          if (hit[0] === $('#action-in').val()) {
            poss = hit[1];
          }
        }
        if (poss && poss.length > 0) {
          $('#category-in').val(poss);
        }
      });
      $('#category-in').blur(function() {
        $('#quantity-in').val(listView.collection.getDefaultForCombo($('#category-in').val(), $('#action-in').val()));
      });
    });
    $('#pre-page').on('click', function() {
      return listView.collection.getPrevPage();
    });
    $('#nxt-page').on('click', function() {
      return listView.collection.getNextPage();
    });
    $('span#bulk_close').on('click', function() {
      $('div#bulk_entry').hide();
    });
    $('div.mood_img').on('click', function(e) {
      var cursel, el, i, n, nm, _i, _j;
      el = e.currentTarget;
      nm = el.attributes["id"].value;
      n = parseInt(nm.substr(4, 1));
      cursel = $(el).hasClass('selected_star');
      if (cursel) {
        for (i = _i = 1; _i <= 5; i = ++_i) {
          nm = "div#star" + i;
          $(nm).addClass("empty_star");
          $(nm).removeClass("selected_star");
        }
      } else {
        for (i = _j = 1; 1 <= n ? _j <= n : _j >= n; i = 1 <= n ? ++_j : --_j) {
          nm = "div#star" + i;
          $(nm).addClass("selected_star");
          $(nm).removeClass("empty_star");
        }
      }
    });
    $('button#mood_submit').on('click', function(e) {
      var cnt;
      cnt = 0;
      $('div.mood_img').each(function(ndx) {
        if ($(this).hasClass('selected_star')) {
          return cnt += 1;
        }
      });
      SimpleClient.saveMood(cnt, function(data) {
        var i, nm, _i;
        if (!parseInt(data) === 200 && !data === "OK") {
          alert(data);
        } else {
          for (i = _i = 1; _i <= 5; i = ++_i) {
            nm = "div#star" + i;
            $(nm).addClass("empty_star");
            $(nm).removeClass("selected_star");
          }
        }
      });
    });
    $('button#calc-daily').on('click', function(e) {
      DoBulk.showSuggestions();
    });
    $('button#bulk_submit').on('click', function(e) {
      DoBulk.saveSuggestions();
      return false;
    });
    $('#new-item-form').on('submit', function(e) {
      return e.preventDefault();
    });
    $('.submit-on-enter').on('keypress', function(e) {
      if ((e.which && e.which === 13) || (e.keyCode && e.keyCode === 13)) {
        $('button.default-button').click();
        $('#action-in').focus();
        return false;
      } else {
        return true;
      }
    });
    $('#ts-in').datepicker({
      dateFormat: "yy-mm-dd"
    });
    $('#action-in').focus();
    return SimpleClient.getMood(300, function(dat) {
      var d, nm, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = dat.length; _i < _len; _i++) {
        d = dat[_i];
        nm = "<img class='mooddatum' src='/public/img/" + d.value + ".png'>";
        _results.push($("#recentmood").append(nm));
      }
      return _results;
    });
  });

}).call(this);
